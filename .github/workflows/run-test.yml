name: Full Test & Upload coverage
on:
  push:
    branches:
      - '**'
  pull_request:
jobs:
  run_playwright:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "yarn install"
        working-directory: frontend
        run: yarn --check-files --frozen-lockfile --non-interactive
      - name: "run-test"
        run: |
          docker composel build
          docker composel up -d
          until curl -f http://localhost:8000/api/ping/
          do
            echo "not success"
            sleep 1
          done
          cd frontend
          npx playwright test --workers=1 e2e/tutorial_scenario.spec.js
          npx playwright test e2e/user/

      - name: "save imgs"
        uses: "actions/upload-artifact@v2"
        with:
          path: frontend/imgs/*
          name: imgs
  run_jest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v4
        with:
          node-version: 16
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "yarn install"
        working-directory: frontend
        run: yarn --check-files --frozen-lockfile --non-interactive
      - name: "jest"
        working-directory: frontend
        run: yarn test:unit --coverage
      - name: "save coverage"
        uses: "actions/upload-artifact@v2"
        with:
          path: frontend/coverage/
          name: coverage
  run_pytest:
    runs-on: ubuntu-latest
    env:
      OS: ubuntu-latest
      PYTHON: "3.7"
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run test
        shell: bash
        run: |
          docker composel -f compose-test.yaml up --exit-code-from backend
      - name: "save coverage"
        uses: "actions/upload-artifact@v2"
        with:
          name: coverage
          path: backend/recotem/coverage.xml
  upload-coverage:
    runs-on: ubuntu-latest
    needs: [run_jest, run_pytest]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "download coverage results"
        uses: actions/download-artifact@v2
        with:
          name: coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          verbose: false
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false
