openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JWT'
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - auth
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/password/change/:
    post:
      operationId: auth_password_change_create
      description: |-
        Calls Django Auth SetPasswordForm save method.

        Accepts the following POST parameters: new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/password/reset/:
    post:
      operationId: auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/password/reset/confirm/:
    post:
      operationId: auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/token/verify/:
    post:
      operationId: auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
  /api/auth/user/:
    get:
      operationId: auth_user_retrieve
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    put:
      operationId: auth_user_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
    patch:
      operationId: auth_user_partial_update
      description: |-
        Reads and updates UserModel fields
        Accepts GET, PUT, PATCH methods.

        Default accepted fields: username, first_name, last_name
        Default display fields: pk, username, email, first_name, last_name
        Read-only fields: pk, email

        Returns UserModel fields.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetails'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
  /api/evaluation_config/:
    get:
      operationId: evaluation_config_list
      description: ''
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: unnamed
        schema:
          type: boolean
      tags:
      - evaluation_config
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EvaluationConfig'
          description: ''
    post:
      operationId: evaluation_config_create
      description: ''
      tags:
      - evaluation_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EvaluationConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EvaluationConfig'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationConfig'
          description: ''
  /api/evaluation_config/{id}/:
    get:
      operationId: evaluation_config_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this evaluation config.
        required: true
      tags:
      - evaluation_config
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationConfig'
          description: ''
    put:
      operationId: evaluation_config_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this evaluation config.
        required: true
      tags:
      - evaluation_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EvaluationConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EvaluationConfig'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationConfig'
          description: ''
    patch:
      operationId: evaluation_config_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this evaluation config.
        required: true
      tags:
      - evaluation_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvaluationConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvaluationConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvaluationConfig'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvaluationConfig'
          description: ''
    delete:
      operationId: evaluation_config_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this evaluation config.
        required: true
      tags:
      - evaluation_config
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/item_meta_data/:
    get:
      operationId: item_meta_data_list
      description: ''
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: project
        schema:
          type: integer
      tags:
      - item_meta_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedItemMetaDataList'
          description: ''
    post:
      operationId: item_meta_data_create
      description: ''
      tags:
      - item_meta_data
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemMetaData'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemMetaData'
          description: ''
  /api/item_meta_data/{id}/:
    get:
      operationId: item_meta_data_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item meta data.
        required: true
      tags:
      - item_meta_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemMetaData'
          description: ''
    put:
      operationId: item_meta_data_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item meta data.
        required: true
      tags:
      - item_meta_data
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemMetaData'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemMetaData'
          description: ''
    patch:
      operationId: item_meta_data_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item meta data.
        required: true
      tags:
      - item_meta_data
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedItemMetaData'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemMetaData'
          description: ''
    delete:
      operationId: item_meta_data_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item meta data.
        required: true
      tags:
      - item_meta_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/item_meta_data/{id}/download_file/:
    get:
      operationId: item_meta_data_download_file_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item meta data.
        required: true
      tags:
      - item_meta_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemMetaData'
          description: ''
  /api/item_meta_data/{id}/unlink_file/:
    delete:
      operationId: item_meta_data_unlink_file_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item meta data.
        required: true
      tags:
      - item_meta_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/model_configuration/:
    get:
      operationId: model_configuration_list
      description: ''
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: project
        schema:
          type: integer
      tags:
      - model_configuration
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedModelConfigurationList'
          description: ''
    post:
      operationId: model_configuration_create
      description: ''
      tags:
      - model_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: ''
  /api/model_configuration/{id}/:
    get:
      operationId: model_configuration_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this model configuration.
        required: true
      tags:
      - model_configuration
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: ''
    put:
      operationId: model_configuration_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this model configuration.
        required: true
      tags:
      - model_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ModelConfiguration'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: ''
    patch:
      operationId: model_configuration_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this model configuration.
        required: true
      tags:
      - model_configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedModelConfiguration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedModelConfiguration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedModelConfiguration'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ModelConfiguration'
          description: ''
    delete:
      operationId: model_configuration_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this model configuration.
        required: true
      tags:
      - model_configuration
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/parameter_tuning_job/:
    get:
      operationId: parameter_tuning_job_list
      description: ''
      parameters:
      - in: query
        name: data
        schema:
          type: integer
      - in: query
        name: data__project
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - parameter_tuning_job
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedParameterTuningJobList'
          description: ''
    post:
      operationId: parameter_tuning_job_create
      description: ''
      tags:
      - parameter_tuning_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterTuningJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParameterTuningJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParameterTuningJob'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterTuningJob'
          description: ''
  /api/parameter_tuning_job/{id}/:
    get:
      operationId: parameter_tuning_job_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this parameter tuning job.
        required: true
      tags:
      - parameter_tuning_job
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterTuningJob'
          description: ''
    put:
      operationId: parameter_tuning_job_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this parameter tuning job.
        required: true
      tags:
      - parameter_tuning_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ParameterTuningJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ParameterTuningJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ParameterTuningJob'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterTuningJob'
          description: ''
    patch:
      operationId: parameter_tuning_job_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this parameter tuning job.
        required: true
      tags:
      - parameter_tuning_job
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedParameterTuningJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedParameterTuningJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedParameterTuningJob'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParameterTuningJob'
          description: ''
    delete:
      operationId: parameter_tuning_job_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this parameter tuning job.
        required: true
      tags:
      - parameter_tuning_job
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/project/:
    get:
      operationId: project_list
      description: ''
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      tags:
      - project
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
    post:
      operationId: project_create
      description: ''
      tags:
      - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
  /api/project/{id}/:
    get:
      operationId: project_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    put:
      operationId: project_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    patch:
      operationId: project_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProject'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
    delete:
      operationId: project_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this project.
        required: true
      tags:
      - project
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/project_summary/{id}/:
    get:
      operationId: project_summary_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - project_summary
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSummary'
          description: ''
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - tokenAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/split_config/:
    get:
      operationId: split_config_list
      description: ''
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: unnamed
        schema:
          type: boolean
      tags:
      - split_config
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SplitConfig'
          description: ''
    post:
      operationId: split_config_create
      description: ''
      tags:
      - split_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SplitConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SplitConfig'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitConfig'
          description: ''
  /api/split_config/{id}/:
    get:
      operationId: split_config_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this split config.
        required: true
      tags:
      - split_config
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitConfig'
          description: ''
    put:
      operationId: split_config_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this split config.
        required: true
      tags:
      - split_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SplitConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SplitConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SplitConfig'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitConfig'
          description: ''
    patch:
      operationId: split_config_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this split config.
        required: true
      tags:
      - split_config
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSplitConfig'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSplitConfig'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSplitConfig'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SplitConfig'
          description: ''
    delete:
      operationId: split_config_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this split config.
        required: true
      tags:
      - split_config
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/task_log/:
    get:
      operationId: task_log_list
      description: ''
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - in: query
        name: id_gt
        schema:
          type: integer
      - in: query
        name: model_id
        schema:
          type: integer
      - in: query
        name: tuning_job_id
        schema:
          type: integer
      tags:
      - task_log
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TaskLog'
          description: ''
  /api/task_log/{id}/:
    get:
      operationId: task_log_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this task log.
        required: true
      tags:
      - task_log
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskLog'
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: ''
      tags:
      - token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/trained_model/:
    get:
      operationId: trained_model_list
      description: ''
      parameters:
      - in: query
        name: data_loc
        schema:
          type: integer
      - in: query
        name: data_loc__project
        schema:
          type: integer
      - in: query
        name: id
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - trained_model
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrainedModelList'
          description: ''
    post:
      operationId: trained_model_create
      description: ''
      tags:
      - trained_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainedModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrainedModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrainedModel'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedModel'
          description: ''
  /api/trained_model/{id}/:
    get:
      operationId: trained_model_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trained model.
        required: true
      tags:
      - trained_model
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedModel'
          description: ''
    put:
      operationId: trained_model_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trained model.
        required: true
      tags:
      - trained_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainedModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TrainedModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrainedModel'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedModel'
          description: ''
    patch:
      operationId: trained_model_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trained model.
        required: true
      tags:
      - trained_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTrainedModel'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTrainedModel'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrainedModel'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedModel'
          description: ''
    delete:
      operationId: trained_model_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trained model.
        required: true
      tags:
      - trained_model
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/trained_model/{id}/download_file/:
    get:
      operationId: trained_model_download_file_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trained model.
        required: true
      tags:
      - trained_model
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainedModel'
          description: ''
  /api/trained_model/{id}/recommend_using_profile_interaction/:
    post:
      operationId: trained_model_recommend_using_profile_interaction_create
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trained model.
        required: true
      tags:
      - trained_model
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileInteraction'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfileInteraction'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfileInteraction'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationResultUsingProfile'
          description: ''
  /api/trained_model/{id}/sample_recommendation_metadata/{metadata_id}/:
    get:
      operationId: trained_model_sample_recommendation_metadata_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trained model.
        required: true
      - in: path
        name: metadata_id
        schema:
          type: string
        required: true
      tags:
      - trained_model
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendationWithMetaData'
          description: ''
  /api/trained_model/{id}/sample_recommendation_raw/:
    get:
      operationId: trained_model_sample_recommendation_raw_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trained model.
        required: true
      tags:
      - trained_model
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawRecommendation'
          description: ''
  /api/trained_model/{id}/unlink_file/:
    delete:
      operationId: trained_model_unlink_file_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this trained model.
        required: true
      tags:
      - trained_model
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/training_data/:
    get:
      operationId: training_data_list
      description: ''
      parameters:
      - in: query
        name: id
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: project
        schema:
          type: integer
      tags:
      - training_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTrainingDataList'
          description: ''
    post:
      operationId: training_data_create
      description: ''
      tags:
      - training_data
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrainingData'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingData'
          description: ''
  /api/training_data/{id}/:
    get:
      operationId: training_data_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training data.
        required: true
      tags:
      - training_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingData'
          description: ''
    put:
      operationId: training_data_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training data.
        required: true
      tags:
      - training_data
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TrainingData'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingData'
          description: ''
    patch:
      operationId: training_data_partial_update
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training data.
        required: true
      tags:
      - training_data
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTrainingData'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingData'
          description: ''
    delete:
      operationId: training_data_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training data.
        required: true
      tags:
      - training_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/training_data/{id}/download_file/:
    get:
      operationId: training_data_download_file_retrieve
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training data.
        required: true
      tags:
      - training_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrainingData'
          description: ''
  /api/training_data/{id}/unlink_file/:
    delete:
      operationId: training_data_unlink_file_destroy
      description: ''
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this training data.
        required: true
      tags:
      - training_data
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - password
      - token
      - username
    EvaluationConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        cutoff:
          type: integer
        target_metric:
          $ref: '#/components/schemas/TargetMetricEnum'
      required:
      - id
      - ins_datetime
    IDAndScore:
      type: object
      properties:
        item_id:
          type: string
        score:
          type: number
          format: float
      required:
      - item_id
      - score
    ItemMetaData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        file:
          type: string
          nullable: true
        valid_columns_list_json:
          type: string
          readOnly: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        basename:
          type: string
          nullable: true
          readOnly: true
        filesize:
          type: integer
          readOnly: true
      required:
      - basename
      - filesize
      - id
      - ins_datetime
      - project
      - valid_columns_list_json
    JWT:
      type: object
      description: Serializer for JWT authentication.
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        user:
          $ref: '#/components/schemas/UserDetails'
      required:
      - access_token
      - refresh_token
      - user
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    ModelConfiguration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tuning_job:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        project:
          type: integer
        recommender_class_name:
          type: string
          maxLength: 128
        parameters_json:
          type: string
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - ins_datetime
      - parameters_json
      - project
      - recommender_class_name
      - tuning_job
    PaginatedItemMetaDataList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ItemMetaData'
    PaginatedModelConfigurationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ModelConfiguration'
    PaginatedParameterTuningJobList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/ParameterTuningJob'
    PaginatedTrainedModelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrainedModel'
    PaginatedTrainingDataList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/TrainingData'
    ParameterTuningJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data:
          type: integer
        split:
          type: integer
        evaluation:
          type: integer
        n_tasks_parallel:
          type: integer
        n_trials:
          type: integer
        memory_budget:
          type: integer
        timeout_overall:
          type: integer
          nullable: true
        timeout_singlestep:
          type: integer
          nullable: true
        random_seed:
          type: integer
          nullable: true
        tried_algorithms_json:
          type: string
          nullable: true
        irspack_version:
          type: string
          nullable: true
          maxLength: 16
        train_after_tuning:
          type: boolean
        best_score:
          type: number
          format: float
          nullable: true
        tuned_model:
          type: integer
          nullable: true
        best_config:
          type: integer
          nullable: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        task_links:
          type: array
          items:
            $ref: '#/components/schemas/TaskAndParameterJobLink'
          readOnly: true
      required:
      - data
      - evaluation
      - id
      - ins_datetime
      - split
      - task_links
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedEvaluationConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        cutoff:
          type: integer
        target_metric:
          $ref: '#/components/schemas/TargetMetricEnum'
    PatchedItemMetaData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        file:
          type: string
          nullable: true
        valid_columns_list_json:
          type: string
          readOnly: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        basename:
          type: string
          nullable: true
          readOnly: true
        filesize:
          type: integer
          readOnly: true
    PatchedModelConfiguration:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        tuning_job:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        project:
          type: integer
        recommender_class_name:
          type: string
          maxLength: 128
        parameters_json:
          type: string
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
    PatchedParameterTuningJob:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        data:
          type: integer
        split:
          type: integer
        evaluation:
          type: integer
        n_tasks_parallel:
          type: integer
        n_trials:
          type: integer
        memory_budget:
          type: integer
        timeout_overall:
          type: integer
          nullable: true
        timeout_singlestep:
          type: integer
          nullable: true
        random_seed:
          type: integer
          nullable: true
        tried_algorithms_json:
          type: string
          nullable: true
        irspack_version:
          type: string
          nullable: true
          maxLength: 16
        train_after_tuning:
          type: boolean
        best_score:
          type: number
          format: float
          nullable: true
        tuned_model:
          type: integer
          nullable: true
        best_config:
          type: integer
          nullable: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        task_links:
          type: array
          items:
            $ref: '#/components/schemas/TaskAndParameterJobLink'
          readOnly: true
    PatchedProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        user_column:
          type: string
          maxLength: 256
        item_column:
          type: string
          maxLength: 256
        time_column:
          type: string
          nullable: true
          maxLength: 256
    PatchedSplitConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        scheme:
          $ref: '#/components/schemas/SchemeEnum'
        heldout_ratio:
          type: number
          format: float
        n_heldout:
          type: integer
          nullable: true
        test_user_ratio:
          type: number
          format: float
        n_test_users:
          type: integer
          nullable: true
        random_seed:
          type: integer
    PatchedTrainedModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        configuration:
          type: integer
        data_loc:
          type: integer
        file:
          type: string
          nullable: true
        irspack_version:
          type: string
          nullable: true
          maxLength: 16
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        basename:
          type: string
          nullable: true
          readOnly: true
        filesize:
          type: integer
          readOnly: true
        task_links:
          type: array
          items:
            $ref: '#/components/schemas/TaskAndTrainedModelLink'
          readOnly: true
    PatchedTrainingData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        file:
          type: string
          nullable: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        basename:
          type: string
          nullable: true
          readOnly: true
        filesize:
          type: integer
          readOnly: true
    PatchedUserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
        user_column:
          type: string
          maxLength: 256
        item_column:
          type: string
          maxLength: 256
        time_column:
          type: string
          nullable: true
          maxLength: 256
      required:
      - id
      - ins_datetime
      - item_column
      - name
      - user_column
    ProjectSummary:
      type: object
      properties:
        n_data:
          type: integer
        n_complete_jobs:
          type: integer
        n_models:
          type: integer
        ins_datetime:
          type: string
          format: date-time
      required:
      - ins_datetime
      - n_complete_jobs
      - n_data
      - n_models
    RawRecommendation:
      type: object
      properties:
        user_id:
          type: string
        user_profile:
          type: array
          items:
            type: string
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/IDAndScore'
      required:
      - recommendations
      - user_id
      - user_profile
    RecommendationResultUsingProfile:
      type: object
      properties:
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/IDAndScore'
      required:
      - recommendations
    RecommendationWithMetaData:
      type: object
      properties:
        user_id:
          type: string
        user_profile:
          type: string
        recommendations:
          type: string
      required:
      - recommendations
      - user_id
      - user_profile
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    SchemeEnum:
      enum:
      - RG
      - TG
      - TU
      type: string
    SplitConfig:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 256
        scheme:
          $ref: '#/components/schemas/SchemeEnum'
        heldout_ratio:
          type: number
          format: float
        n_heldout:
          type: integer
          nullable: true
        test_user_ratio:
          type: number
          format: float
        n_test_users:
          type: integer
          nullable: true
        random_seed:
          type: integer
      required:
      - id
      - ins_datetime
    StatusEnum:
      enum:
      - FAILURE
      - PENDING
      - RECEIVED
      - RETRY
      - REVOKED
      - STARTED
      - SUCCESS
      type: string
    TargetMetricEnum:
      enum:
      - ndcg
      - map
      - recall
      - hit
      type: string
    TaskAndParameterJobLink:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/TaskResult'
      required:
      - task
    TaskAndTrainedModelLink:
      type: object
      properties:
        task:
          $ref: '#/components/schemas/TaskResult'
      required:
      - task
    TaskLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        contents:
          type: string
        task:
          type: integer
      required:
      - id
      - ins_datetime
      - task
    TaskResult:
      type: object
      properties:
        task_id:
          type: string
          description: Celery ID for the Task that was run
          maxLength: 255
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Task State
          description: Current state of the task being run
        date_created:
          type: string
          format: date-time
          readOnly: true
          title: Created DateTime
          description: Datetime field when the task result was created in UTC
        date_done:
          type: string
          format: date-time
          readOnly: true
          title: Completed DateTime
          description: Datetime field when the task was completed in UTC
        traceback:
          type: string
          nullable: true
          description: Text of the traceback if the task generated one
      required:
      - date_created
      - date_done
      - task_id
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    TrainedModel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        configuration:
          type: integer
        data_loc:
          type: integer
        file:
          type: string
          nullable: true
        irspack_version:
          type: string
          nullable: true
          maxLength: 16
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        basename:
          type: string
          nullable: true
          readOnly: true
        filesize:
          type: integer
          readOnly: true
        task_links:
          type: array
          items:
            $ref: '#/components/schemas/TaskAndTrainedModelLink'
          readOnly: true
      required:
      - basename
      - configuration
      - data_loc
      - filesize
      - id
      - ins_datetime
      - task_links
    TrainingData:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        project:
          type: integer
        file:
          type: string
          nullable: true
        ins_datetime:
          type: string
          format: date-time
          readOnly: true
        basename:
          type: string
          nullable: true
          readOnly: true
        filesize:
          type: integer
          readOnly: true
      required:
      - basename
      - filesize
      - id
      - ins_datetime
      - project
    UserDetails:
      type: object
      description: User model w/o password
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          readOnly: true
          title: Email address
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - email
      - pk
      - username
    UserProfileInteraction:
      type: object
      properties:
        item_ids:
          type: array
          items:
            type: string
        cutoff:
          type: integer
      required:
      - cutoff
      - item_ids
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: Session
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
