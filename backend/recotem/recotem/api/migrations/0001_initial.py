# Generated by Django 3.2 on 2021-05-19 15:01

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("django_celery_results", "0008_chordcounter"),
    ]

    operations = [
        migrations.CreateModel(
            name="EvaluationConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, null=True)),
                ("cutoff", models.IntegerField(default=20)),
                (
                    "target_metric",
                    models.CharField(
                        choices=[
                            ("ndcg", "Normalized discounted cumulative gain"),
                            ("map", "mean average precision"),
                            ("recall", "recall"),
                            ("hit", "hit"),
                        ],
                        default="ndcg",
                        max_length=10,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ModelConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, null=True)),
                ("recommender_class_name", models.CharField(max_length=128)),
                ("parameters_json", models.TextField()),
                ("ins_datetime", models.DateTimeField(auto_now_add=True)),
                ("upd_datetime", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="ParameterTuningJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, null=True)),
                ("n_tasks_parallel", models.IntegerField(default=1)),
                ("n_trials", models.IntegerField(default=40)),
                ("memory_budget", models.IntegerField(default=8000)),
                ("timeout_overall", models.IntegerField(null=True)),
                ("timeout_singlestep", models.IntegerField(null=True)),
                ("random_seed", models.IntegerField(null=True)),
                ("ins_datetime", models.DateTimeField(auto_now_add=True)),
                ("upd_datetime", models.DateTimeField(auto_now=True)),
                (
                    "best_config",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="api.modelconfiguration",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.TextField(unique=True)),
                ("user_column", models.CharField(max_length=256)),
                ("item_column", models.CharField(max_length=256)),
                ("time_column", models.CharField(max_length=256, null=True)),
                ("ins_datetime", models.DateTimeField(auto_now_add=True)),
                ("upd_datetime", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="SplitConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, null=True)),
                (
                    "scheme",
                    models.CharField(
                        choices=[
                            ("RG", "Random"),
                            ("TG", "Time Global"),
                            ("TU", "Time User"),
                        ],
                        default="RG",
                        max_length=2,
                    ),
                ),
                ("heldout_ratio", models.FloatField(default=0.1)),
                ("n_heldout", models.IntegerField(null=True)),
                ("test_user_ratio", models.FloatField(default=1.0)),
                ("n_test_users", models.IntegerField(null=True)),
                ("random_seed", models.IntegerField(default=42)),
            ],
        ),
        migrations.CreateModel(
            name="TrainingData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("upload_path", models.FileField(upload_to="training_data/")),
                ("ins_datetime", models.DateTimeField(auto_now_add=True)),
                ("upd_datetime", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="api.project"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TrainedModel",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=256, null=True)),
                ("model_path", models.FileField(null=True, upload_to="models/")),
                ("ins_datetime", models.DateTimeField(auto_now_add=True)),
                ("upd_datetime", models.DateTimeField(auto_now=True)),
                (
                    "configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.modelconfiguration",
                    ),
                ),
                (
                    "data_loc",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.trainingdata",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("contents", models.TextField(blank=True)),
                ("ins_datetime", models.DateTimeField(auto_now_add=True)),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_celery_results.taskresult",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskAndTrainedModelLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ins_datetime", models.DateTimeField(auto_now_add=True)),
                (
                    "model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.trainedmodel",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_celery_results.taskresult",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TaskAndParameterJobLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ins_datetime", models.DateTimeField(auto_now_add=True)),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="api.parametertuningjob",
                    ),
                ),
                (
                    "task",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_celery_results.taskresult",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="parametertuningjob",
            name="data",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.trainingdata"
            ),
        ),
        migrations.AddField(
            model_name="parametertuningjob",
            name="evaluation",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.evaluationconfig"
            ),
        ),
        migrations.AddField(
            model_name="parametertuningjob",
            name="split",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="api.splitconfig",
            ),
        ),
        migrations.AddField(
            model_name="parametertuningjob",
            name="tuned_model",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="api.trainedmodel",
            ),
        ),
        migrations.AddField(
            model_name="modelconfiguration",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="api.project"
            ),
        ),
    ]
